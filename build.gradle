// buildscript{
// 	repositories  {
//       maven {
//             url "https://luminoslabs.jfrog.io/artifactory/mvn-releases"
//             credentials {
//                     username "luminos-intershop-deploy"
//                     password "Th3_On3_Wh0_D3p1oy5_1nT3r5hOp"
//                 }
//             authentication {
//                     digest(BasicAuthentication)
//                 }
//         }

//         ivy {
//             url "https://luminoslabs.jfrog.io/artifactory/ivy-releases"
//             credentials {
//                     username "luminos-intershop-deploy"
//                     password "Th3_On3_Wh0_D3p1oy5_1nT3r5hOp"
//                 }
//               authentication {
//                       digest(BasicAuthentication)
//                   }
//         }

      
//     }
// }

// repositories  {
//       maven {
//             url "https://luminoslabs.jfrog.io/artifactory/mvn-releases"
//             credentials {
//                     username "luminos-intershop-deploy"
//                     password "Th3_On3_Wh0_D3p1oy5_1nT3r5hOp"
//                 }
//             authentication {
//                     digest(BasicAuthentication)
//                 }
//         }

//         ivy {
//             url "https://luminoslabs.jfrog.io/artifactory/ivy-releases"
//             credentials {
//                     username "luminos-intershop-deploy"
//                     password "Th3_On3_Wh0_D3p1oy5_1nT3r5hOp"
//                 }
//               authentication {
//                       digest(BasicAuthentication)
//                   }
//         }

      
//     }
  
  
  


apply plugin: 'com.intershop.gradle.scmversion'
scm {
	version {
		type = 'threeDigits'
		increment = 'PATCH'
		patternDigits = 1

		initialVersion = '3.0.0'

		// activate this, if your branch name does not contain
        	// a version part, eg. BB_ISTOOLS-3119
        	// if your branch contains a version (eg BB_14-ISTOOLS-4711)
        	// set the following property to true
        	branchWithVersion = false
	}
}



version = scm.version.version

apply plugin: 'com.intershop.gradle.versionrecommender'

apply plugin: 'hot-code-reloading'
apply plugin: 'ivy-publish'

// ci configuration

/**
 * Simple Release configuration
 * requires only a Maven compatible repository and
 * additional environment variables.
 * See also https://github.com/IntershopCommunicationsAG/gradle-release-plugins. 
 **/
apply plugin: 'com.intershop.gradle.simplepublish-configuration'


/**
 * This plugin will create a source package of the build.
 * It is possible to use this e.g. for the creation of an ESCROW package.
 * _This plugin is optional._
 * See https://github.com/IntershopCommunicationsAG/gradle-release-plugins
 **/

// apply plugin: 'com.intershop.gradle.escrow-plugin'

// escrow {
// 	sourceGroup = 'com.intershop.public.source'
// 	exclude '**/target'
// 	exclude '**/gradle/wrapper/gradle-wrapper.properties'
// }

description 'Components Responsive Starter Store Applications'
group = 'com.luminoslabs.luminosshop'

assert System.properties['java.version'].startsWith('1.8')



versionRecommendation {
    provider {
		//thirdparty.version shouldn't be used but it is needed because of this hacky fix - https://support.intershop.com/kb/index.php/Display/296F34
		//EDIT: This has been resolved by publishin v19 as corporate_artifact
		//properties('thirdparty', file('thirdparty.version')) {}

        // can be activated with a special version
        ivy('infrastructure',  'com.intershop.infrastructure:assembly') {}
        ivy('platform',  'com.intershop.platform:platform') {}
        ivy('content',  'com.intershop.content:assembly') {}
        ivy('business',  'com.intershop.business:intershop7') {}
        ivy('b2b',  'com.intershop.b2b:b2b') {}

        // default dependencies
        ivy('icm-b2x', 'com.intershop.assembly:commerce_management_b2x:7.9.0.0') {}

        // intershop build dependencies
        properties('intershopBuild', file('intershopBuild.version')) {}
		
		// solr cloud adapter version
        properties('solrcloud', file('solrcloud.version')) {}

		// consume version filters 
		pom('versionfilter-icm', 'com.intershop.versions:versionfilter-icm:4.2.1') {}
		pom('versionfilter-icm-test', 'com.intershop.versions:versionfilter-icm-test:3.3.1') {}
    }
    
    // all versions are used from providers
    forceRecommenderVersion = true

    excludeProjectsbyName = ['microservices']

    updateConfiguration {
        // Necessary for update of ivy artifacts
        ivyPattern = com.intershop.gradle.repoconfig.RepoConfigRegistry.ivyPattern

        defaultUpdateProvider = [ 'icm-b2x', 'versionfilter-icm', 'versionfilter-icm-test']
        defaultUpdate = 'MINOR'
    }
}

def assemblyProjects = [ project(':assembly_luminosshop') ]

subprojects {
	apply plugin: 'com.intershop.gradle.buildinfo'
  
	project.plugins.withType(JavaBasePlugin) {
		sourceCompatibility = 1.8
		targetCompatibility = 1.8
	}

	version = rootProject.version
	group = 'com.luminoslabs.luminosshop'

	// TODO use traditional build output dir until IS-12727 is resolved
	buildDir = new File(projectDir, 'target')

	if(! assemblyProjects.contains(it)) {

		// Necessary for the correct evaluation order!
		assemblyProjects.each {Project assemblyProject ->
			assemblyProject.evaluationDependsOn it.path
		}
		
		if( name != 'microservices'){

			apply plugin: 'intershop-base'
			apply plugin: 'com.intershop.gradle.javadoc-configuration'
            apply plugin: 'com.intershop.gradle.javasource-plugin'


			/*apply plugin: 'com.intershop.gradle.sonarQube'
			sonarqube {
				sonarProperties {
					property 'sonar.host.url', 'https://sonar.intershop.de'
				}
			}*/

			intershop {
				productName = 'LuminosShop'
				productCopyrightOwner = 'Luminos Labs'
			}
			
			// print detailed information about deprecated classes
			tasks.withType(JavaCompile) {
				options.deprecation = true
			}
			
		    if (new File("${projectDir}/staticfiles/cartridge/templates").directory) {
				println("Add isml package for ${name}") 
				intershop {
					packages {
						cartridge {
							srcDir(isml2classMain)
						}
					}
				}
			}
			
			// setup source and target compatibility for isml and add default dependencies    
			plugins.withId('com.intershop.gradle.isml') {
				tasks.withType(com.intershop.gradle.isml.task.IsmlCompile) {
					sourceCompatibility = 1.8
					targetCompatibility = 1.8
					jspPackage = "org.apache.jsp.${project.name}"
				}
				
				dependencies {
					compile 'com.intershop.platform:servletengine'
					compile 'org.apache.tomcat:tomcat-jsp-api'
				}
			}
			
			dependencies {
				// com.intershop.component.spreadsheet.capi.CellSelector.Cell<T extends ComputedItem> indirectly referenced through
				// com.intershop.beehive.bts.capi.orderprocess.LineItemCtnr (or a derived type like com.intershop.beehive.bts.capi.orderprocess.basket.Basket)
				compile group: 'com.intershop.platform', name: 'bc_spreadsheet'
				
				// com.intershop.beehive.pipeline.capi.ParameterizedPipelineElement
				compile group: 'com.intershop.platform', name: 'pipeline'

				compile  'javax.inject:javax.inject'
				compile  'org.slf4j:slf4j-api'
				// required for isml2classMain
				compile 'ch.qos.logback:logback-core'
				compile 'com.google.inject:guice'
				compile 'org.apache.tomcat:tomcat-el-api'
				compile 'org.apache.tomcat:tomcat-servlet-api'
			}
		}
	}
}

buildscript {
    dependencies {
        //bintray dependencies
        classpath 'com.intershop.gradle.scm:scmversion-gradle-plugin:2.6.0'
        classpath 'com.intershop.gradle.publish:gradle-release-plugins:3.5.3'
        classpath 'com.intershop.gradle.sonarqube:sonarqube-gradle-plugin:2.1.0'
        classpath 'com.intershop.gradle.versionrecommender:versionrecommender-gradle-plugin:1.3.4'
        classpath 'com.intershop.gradle.repoconfig:repoconfig-gradle-plugin:3.3.0' 
		 
        classpath 'com.intershop.gradle.resourcelist:resourcelist-gradle-plugin:2.1.0'
	classpath 'com.intershop.gradle.jaxb:jaxb-gradle-plugin:1.0.1'
	classpath 'com.intershop.gradle.isml:isml-gradle-plugin:1.0.4'
	classpath 'com.intershop.gradle.wsdl:wsdl-gradle-plugin:1.1.0'

        classpath 'com.intershop.build.gradle:ish-component-plugin:2.11.9'
        classpath 'com.intershop.build.gradle:hot-code-reloading:2.11.9'

        classpath "org.lesscss:lesscss:1.7.0.1.1"

        classpath 'com.intershop.deployment:assembly-toolbox:3.2.1' 
        classpath 'com.intershop.deployment:deploy-intershop:3.2.1'
    }
}

//Custom task to list repositories
task listrepos {
    doLast {
        println "Repositories:"
        project.repositories.each { println "Name: " + it.name + "; url: " + it.url }
   }
}


