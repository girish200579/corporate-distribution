# Id of the platform to deploy on (must match the actual OS/distribution for the tests to be successful)
# Choose from: linux.rhel.x86_64, linux.sles.x86_64, win.x86_64
platformId = win.x86_64

# ID of the deployed server instance
instanceId = 1

# Set environment for your deployment: production, test, development
environment = development
# Choose whether or not to deploy Javadoc for release cartridges
#includeJavadoc = false

# Configure the number of used application servers
numberOfAppservers = 1

# Set java location for use in scripts, e.g. to execute the server-startup
# Leave empty if the same java as gradle-process uses should used  
#javaHome = C:/path/to/jdk

# license
licenseFile = C:/path/to/license.xml 

# Important ports
webserverPort = 80
webserverHttpsPort = 443
appserverDebugPort = 6667
testrunnerDebugPort = 6668
dbToolDebugPort = 6669

# The remaining local ports are taken from a port range, should contain 10 free ports (or more for more appserver instances)
# To find out which port is used where, open the target/server/settings.gradle
freePortsStart = 10050
freePortsEnd = 10059

# Database configuration
databaseHost = localhost
databasePort = 1521
databaseSid = xe
# Alternatively to sid set a service name (only use one of both)
# databaseServiceName = XE
databaseTnsAlias = ISSERVER.world
databaseUser = intershop
databasePassword = intershop
oracleClientDir = C:/path/to/oracle/client/dir
# databaseType: oracle | mssql
databaseType = oracle
# jdbcURL for mssql 	: jdbc:sqlserver://<HOST>:<PORT>;databaseName=<DBSCHEMA_NAME>
# 	using sid			: jdbc:oracle:thin:@<HOST>:<PORT>:<SID>
#	using service Name  : jdbc:oracle:thin:@//<HOST>:<PORT>/<SERVICE_NAME>
jdbcUrl = 

#list of ZooKeeper connection urls (separated by ';'), which manage the solr cluster
solrZooKeeperHostList = localhost:9983
#prefix to distinguish solr indexes within the solr cluster
#solrClusterIndexPrefix =

#Deployment launcher version
#deploymentLauncherVersion = 2.11.2

# Eureka configuration
# eurekaServerPort, eurekaServerHostName and eurekaServerPath are used deploy a local eureka server
#eurekaServerPort = 8765
#eurekaServerHostName = localhost
# don't forget the '/' at the end of eurekaServerPath
#eurekaServerPath = eureka/
#environment of eureka server
#eurekaServerEnvironment = 
# URLs for server replica (optional)
#eurekaReplicaUrl =
# registration url, which clients use to register at eureka (local eureka or another)
# if this property isn't set explicitly this property is calculated using eurekaServerPort, eurekaServerHostName and eurekaServerPath
#eurekaServerUrl =
# the application server registers itself on eureka using this name
#eurekaAppServerName =
#the solr server registers itself on eureka using this name 
#eurekaAppSolRServerName =


# Microservice configuration
#microServicePort = 
#microServiceName = 
#microServiceInstanceId =
# Microservice database configuration
# for linux please replace the path 'runtime/testdb' with an absolute path, where you have access rights
# e.g., <INSTALL_DIR>/server/local/microservices/runtime/testdb
#microserviceConnectionUrlDatabase = jdbc:derby:runtime/testdb;create=true
#microserviceUserDatabase = test
#microservicePasswordDatabase = test
# Microservice naming mapping
#microserviceRecurringOrderName = 
#microserviceSchedulingName = 

# User group and user, uncomment and set on Linux
#user = 
#userGroup =


webAdapterSharedMemoryKey = 0x2001
